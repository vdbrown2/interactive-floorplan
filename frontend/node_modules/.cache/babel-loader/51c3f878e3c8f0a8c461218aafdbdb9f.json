{"ast":null,"code":"var _jsxFileName = \"/Users/deshawnbrown/Projects/MiscDev/interactive-office-app-2/frontend/src/FloorplanEditor.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Rnd } from \"react-rnd\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FloorplanEditor() {\n  _s();\n  const [zones, setZones] = useState([]);\n  const [nextId, setNextId] = useState(1);\n  const addZone = () => {\n    const newZone = {\n      id: nextId,\n      x: 50 + nextId * 10,\n      y: 50 + nextId * 10,\n      width: 100,\n      height: 80,\n      name: `Office ${nextId}`,\n      identifier: `office-${nextId}`\n    };\n    setZones([...zones, newZone]);\n    setNextId(nextId + 1);\n  };\n  const updateZone = (id, changes) => {\n    setZones(zones.map(z => z.id === id ? {\n      ...z,\n      ...changes\n    } : z));\n  };\n  const saveZones = async () => {\n    const floorplanId = 1; // Replace with dynamic ID if needed\n    for (const zone of zones) {\n      await axios.post(`/api/floorplans/${floorplanId}/office_zones`, {\n        ...zone\n      });\n    }\n    alert(\"Zones saved!\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addZone,\n      children: \"Add Office Zone\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: saveZones,\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"relative\",\n        width: 800,\n        height: 600,\n        marginTop: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/floorplan.png\",\n        style: {\n          width: \"100%\",\n          height: \"100%\"\n        },\n        alt: \"floorplan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), zones.map(zone => /*#__PURE__*/_jsxDEV(Rnd, {\n        default: {\n          x: zone.x,\n          y: zone.y,\n          width: zone.width,\n          height: zone.height\n        },\n        bounds: \"parent\",\n        onDragStop: (e, d) => updateZone(zone.id, {\n          x: d.x,\n          y: d.y\n        }),\n        onResizeStop: (e, dir, ref, delta, pos) => {\n          updateZone(zone.id, {\n            x: pos.x,\n            y: pos.y,\n            width: ref.offsetWidth,\n            height: ref.offsetHeight\n          });\n        },\n        style: {\n          border: \"2px dashed #007bff\",\n          backgroundColor: \"rgba(0,123,255,0.05)\",\n          position: \"absolute\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          value: zone.name,\n          onChange: e => updateZone(zone.id, {\n            name: e.target.value\n          }),\n          style: {\n            width: \"90%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)\n      }, zone.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(FloorplanEditor, \"0jWFdlEAtObhRpsb7GTmfRmH7Mo=\");\n_c = FloorplanEditor;\nvar _c;\n$RefreshReg$(_c, \"FloorplanEditor\");","map":{"version":3,"names":["React","useState","Rnd","axios","jsxDEV","_jsxDEV","FloorplanEditor","_s","zones","setZones","nextId","setNextId","addZone","newZone","id","x","y","width","height","name","identifier","updateZone","changes","map","z","saveZones","floorplanId","zone","post","alert","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","style","position","marginTop","src","alt","default","bounds","onDragStop","e","d","onResizeStop","dir","ref","delta","pos","offsetWidth","offsetHeight","border","backgroundColor","value","onChange","target","_c","$RefreshReg$"],"sources":["/Users/deshawnbrown/Projects/MiscDev/interactive-office-app-2/frontend/src/FloorplanEditor.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Rnd } from \"react-rnd\";\nimport axios from \"axios\";\n\nexport default function FloorplanEditor() {\n  const [zones, setZones] = useState([]);\n  const [nextId, setNextId] = useState(1);\n\n  const addZone = () => {\n    const newZone = {\n      id: nextId,\n      x: 50 + nextId * 10,\n      y: 50 + nextId * 10,\n      width: 100,\n      height: 80,\n      name: `Office ${nextId}`,\n      identifier: `office-${nextId}`\n    };\n    setZones([...zones, newZone]);\n    setNextId(nextId + 1);\n  };\n\n  const updateZone = (id, changes) => {\n    setZones(zones.map(z => z.id === id ? { ...z, ...changes } : z));\n  };\n\n  const saveZones = async () => {\n    const floorplanId = 1; // Replace with dynamic ID if needed\n    for (const zone of zones) {\n      await axios.post(`/api/floorplans/${floorplanId}/office_zones`, {\n        ...zone\n      });\n    }\n    alert(\"Zones saved!\");\n  };\n\n  return (\n    <div>\n      <button onClick={addZone}>Add Office Zone</button>\n      <button onClick={saveZones}>Save</button>\n      <div style={{ position: \"relative\", width: 800, height: 600, marginTop: 10 }}>\n        <img src=\"/floorplan.png\" style={{ width: \"100%\", height: \"100%\" }} alt=\"floorplan\" />\n        {zones.map(zone => (\n          <Rnd\n            key={zone.id}\n            default={{\n              x: zone.x,\n              y: zone.y,\n              width: zone.width,\n              height: zone.height\n            }}\n            bounds=\"parent\"\n            onDragStop={(e, d) => updateZone(zone.id, { x: d.x, y: d.y })}\n            onResizeStop={(e, dir, ref, delta, pos) => {\n              updateZone(zone.id, {\n                x: pos.x,\n                y: pos.y,\n                width: ref.offsetWidth,\n                height: ref.offsetHeight\n              });\n            }}\n            style={{\n              border: \"2px dashed #007bff\",\n              backgroundColor: \"rgba(0,123,255,0.05)\",\n              position: \"absolute\"\n            }}\n          >\n            <input\n              value={zone.name}\n              onChange={(e) => updateZone(zone.id, { name: e.target.value })}\n              style={{ width: \"90%\" }}\n            />\n          </Rnd>\n        ))}\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}